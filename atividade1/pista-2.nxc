const int COR_PRETA = 55;
const int VELOCIDADE_FRENTE = 40;
const int TEMPO_ANDA_PARA_FRENTE = 200;
const int VELOCIDADE_CURVA = 60;
const int TEMPO_CURVA= 210;

int eh_melhor_direita = 1;

int verifica(byte roda, int eh_melhor_opcao, int dobro){
    int multiplicador = 1;
    if(dobro)
             multiplicador++;

    Off(OUT_AC);
    OnRev(roda, VELOCIDADE_CURVA *  multiplicador);

    if(eh_melhor_opcao)
        Wait(TEMPO_CURVA);
    else
        Wait(TEMPO_CURVA * 2);
    Off(OUT_AC);

    return SENSOR_1 < COR_PRETA;
}

int verifica_direita(int eh_melhor_opcao, int dobro){
    return verifica(OUT_C, eh_melhor_opcao, dobro);
}

int verifica_esquerda(int eh_melhor_opcao, int dobro){
    return verifica(OUT_A, eh_melhor_opcao, dobro);
}

void re(){
    OnFwd(OUT_C, VELOCIDADE_FRENTE);
    OnFwd(OUT_A, VELOCIDADE_FRENTE);
    Wait(200);
}

void direciona2(){
    if(eh_melhor_direita){
        int found = verifica_direita(true,true);
        if(found) return;

        eh_melhor_direita = false;
        eh_melhor_direita = !verifica_esquerda(false,true);
    }else{
        int found = verifica_esquerda(true,true);
        if(found) return;
        eh_melhor_direita = verifica_direita(false,true);
    }
}

void direciona(){
    if(eh_melhor_direita){
        int found = verifica_direita(true,false);
        if(found) return;

        eh_melhor_direita = false;
        eh_melhor_direita = !verifica_esquerda(false,false);
    }else{
        int found = verifica_esquerda(true,false);
        if(found) return;
        eh_melhor_direita = verifica_direita(false,false);
    }


}



void anda_frente(){
    OnFwd(OUT_C, VELOCIDADE_FRENTE);
    OnFwd(OUT_A, VELOCIDADE_FRENTE);
}

task main(){
    SetSensorLight(IN_1);
    while(true){
        if(SENSOR_1 < COR_PRETA){
            anda_frente();
            while(SENSOR_1 < COR_PRETA);
            //Wait(20);
        }else{
            direciona();
            if(SENSOR_1 > COR_PRETA)
                break;
        }
    }
}
